{"ast":null,"code":"'use strict';\n\nvar call = require('../internals/function-call');\n\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\n\nvar anObject = require('../internals/an-object');\n\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\n\nvar toLength = require('../internals/to-length');\n\nvar toString = require('../internals/to-string');\n\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar getMethod = require('../internals/get-method');\n\nvar advanceStringIndex = require('../internals/advance-string-index');\n\nvar regExpExec = require('../internals/regexp-exec-abstract'); // @@match logic\n\n\nfixRegExpWellKnownSymbolLogic('match', function (MATCH, nativeMatch, maybeCallNative) {\n  return [// `String.prototype.match` method\n  // https://tc39.es/ecma262/#sec-string.prototype.match\n  function match(regexp) {\n    var O = requireObjectCoercible(this);\n    var matcher = isNullOrUndefined(regexp) ? undefined : getMethod(regexp, MATCH);\n    return matcher ? call(matcher, regexp, O) : new RegExp(regexp)[MATCH](toString(O));\n  }, // `RegExp.prototype[@@match]` method\n  // https://tc39.es/ecma262/#sec-regexp.prototype-@@match\n  function (string) {\n    var rx = anObject(this);\n    var S = toString(string);\n    var res = maybeCallNative(nativeMatch, rx, S);\n    if (res.done) return res.value;\n    if (!rx.global) return regExpExec(rx, S);\n    var fullUnicode = rx.unicode;\n    rx.lastIndex = 0;\n    var A = [];\n    var n = 0;\n    var result;\n\n    while ((result = regExpExec(rx, S)) !== null) {\n      var matchStr = toString(result[0]);\n      A[n] = matchStr;\n      if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n      n++;\n    }\n\n    return n === 0 ? null : A;\n  }];\n});","map":{"version":3,"names":["call","require","fixRegExpWellKnownSymbolLogic","anObject","isNullOrUndefined","toLength","toString","requireObjectCoercible","getMethod","advanceStringIndex","regExpExec","MATCH","nativeMatch","maybeCallNative","match","regexp","O","matcher","undefined","RegExp","string","rx","S","res","done","value","global","fullUnicode","unicode","lastIndex","A","n","result","matchStr"],"sources":["/home/ubuntu/PSW/INTERVIEW MATERIALS/Project-Assignment/Proleadsoft-Project-Assignment/resume-builder/node_modules/core-js/modules/es.string.match.js"],"sourcesContent":["'use strict';\nvar call = require('../internals/function-call');\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\nvar toLength = require('../internals/to-length');\nvar toString = require('../internals/to-string');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar getMethod = require('../internals/get-method');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\n// @@match logic\nfixRegExpWellKnownSymbolLogic('match', function (MATCH, nativeMatch, maybeCallNative) {\n  return [\n    // `String.prototype.match` method\n    // https://tc39.es/ecma262/#sec-string.prototype.match\n    function match(regexp) {\n      var O = requireObjectCoercible(this);\n      var matcher = isNullOrUndefined(regexp) ? undefined : getMethod(regexp, MATCH);\n      return matcher ? call(matcher, regexp, O) : new RegExp(regexp)[MATCH](toString(O));\n    },\n    // `RegExp.prototype[@@match]` method\n    // https://tc39.es/ecma262/#sec-regexp.prototype-@@match\n    function (string) {\n      var rx = anObject(this);\n      var S = toString(string);\n      var res = maybeCallNative(nativeMatch, rx, S);\n\n      if (res.done) return res.value;\n\n      if (!rx.global) return regExpExec(rx, S);\n\n      var fullUnicode = rx.unicode;\n      rx.lastIndex = 0;\n      var A = [];\n      var n = 0;\n      var result;\n      while ((result = regExpExec(rx, S)) !== null) {\n        var matchStr = toString(result[0]);\n        A[n] = matchStr;\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n        n++;\n      }\n      return n === 0 ? null : A;\n    }\n  ];\n});\n"],"mappings":"AAAA;;AACA,IAAIA,IAAI,GAAGC,OAAO,CAAC,4BAAD,CAAlB;;AACA,IAAIC,6BAA6B,GAAGD,OAAO,CAAC,iDAAD,CAA3C;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIG,iBAAiB,GAAGH,OAAO,CAAC,mCAAD,CAA/B;;AACA,IAAII,QAAQ,GAAGJ,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIK,QAAQ,GAAGL,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIM,sBAAsB,GAAGN,OAAO,CAAC,uCAAD,CAApC;;AACA,IAAIO,SAAS,GAAGP,OAAO,CAAC,yBAAD,CAAvB;;AACA,IAAIQ,kBAAkB,GAAGR,OAAO,CAAC,mCAAD,CAAhC;;AACA,IAAIS,UAAU,GAAGT,OAAO,CAAC,mCAAD,CAAxB,C,CAEA;;;AACAC,6BAA6B,CAAC,OAAD,EAAU,UAAUS,KAAV,EAAiBC,WAAjB,EAA8BC,eAA9B,EAA+C;EACpF,OAAO,CACL;EACA;EACA,SAASC,KAAT,CAAeC,MAAf,EAAuB;IACrB,IAAIC,CAAC,GAAGT,sBAAsB,CAAC,IAAD,CAA9B;IACA,IAAIU,OAAO,GAAGb,iBAAiB,CAACW,MAAD,CAAjB,GAA4BG,SAA5B,GAAwCV,SAAS,CAACO,MAAD,EAASJ,KAAT,CAA/D;IACA,OAAOM,OAAO,GAAGjB,IAAI,CAACiB,OAAD,EAAUF,MAAV,EAAkBC,CAAlB,CAAP,GAA8B,IAAIG,MAAJ,CAAWJ,MAAX,EAAmBJ,KAAnB,EAA0BL,QAAQ,CAACU,CAAD,CAAlC,CAA5C;EACD,CAPI,EAQL;EACA;EACA,UAAUI,MAAV,EAAkB;IAChB,IAAIC,EAAE,GAAGlB,QAAQ,CAAC,IAAD,CAAjB;IACA,IAAImB,CAAC,GAAGhB,QAAQ,CAACc,MAAD,CAAhB;IACA,IAAIG,GAAG,GAAGV,eAAe,CAACD,WAAD,EAAcS,EAAd,EAAkBC,CAAlB,CAAzB;IAEA,IAAIC,GAAG,CAACC,IAAR,EAAc,OAAOD,GAAG,CAACE,KAAX;IAEd,IAAI,CAACJ,EAAE,CAACK,MAAR,EAAgB,OAAOhB,UAAU,CAACW,EAAD,EAAKC,CAAL,CAAjB;IAEhB,IAAIK,WAAW,GAAGN,EAAE,CAACO,OAArB;IACAP,EAAE,CAACQ,SAAH,GAAe,CAAf;IACA,IAAIC,CAAC,GAAG,EAAR;IACA,IAAIC,CAAC,GAAG,CAAR;IACA,IAAIC,MAAJ;;IACA,OAAO,CAACA,MAAM,GAAGtB,UAAU,CAACW,EAAD,EAAKC,CAAL,CAApB,MAAiC,IAAxC,EAA8C;MAC5C,IAAIW,QAAQ,GAAG3B,QAAQ,CAAC0B,MAAM,CAAC,CAAD,CAAP,CAAvB;MACAF,CAAC,CAACC,CAAD,CAAD,GAAOE,QAAP;MACA,IAAIA,QAAQ,KAAK,EAAjB,EAAqBZ,EAAE,CAACQ,SAAH,GAAepB,kBAAkB,CAACa,CAAD,EAAIjB,QAAQ,CAACgB,EAAE,CAACQ,SAAJ,CAAZ,EAA4BF,WAA5B,CAAjC;MACrBI,CAAC;IACF;;IACD,OAAOA,CAAC,KAAK,CAAN,GAAU,IAAV,GAAiBD,CAAxB;EACD,CA/BI,CAAP;AAiCD,CAlC4B,CAA7B"},"metadata":{},"sourceType":"script"}